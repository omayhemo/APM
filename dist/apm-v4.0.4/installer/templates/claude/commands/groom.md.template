---
name: groom
description: Execute comprehensive parallel backlog grooming with 18 native sub-agents
metadata:
  version: 1.0.0
  agent: Product Owner
  performance: parallel
  priority: critical
---

## ðŸŽ­ PERSONA CONTEXT ACTIVATION

**This command requires the Product persona.**

```markdown
*Loading Product context for optimal command execution...*

Quick Context Load (1-2 seconds):
- Loading Product configuration and expertise
- Loading relevant templates and frameworks  
- Voice notification: bash ${{SPEAK_PO}} "Product context loaded for command execution"
- Workspace validation: Ensuring execution from {{PROJECT_ROOT}}

*Product context ready. Proceeding with command...*
```


# PRODUCT OWNER BACKLOG GROOMING

## ðŸš€ INITIALIZATION PROTOCOL (MANDATORY)

**CRITICAL**: Upon activation, you MUST immediately execute parallel initialization:

```
I'm activating comprehensive backlog grooming with 18 parallel sub-agents for maximum efficiency.

*Executing parallel grooming tasks:*
[Use native sub-agents - ALL in single function_calls block]
- Task 1: Load Product Owner persona from {{AP_ROOT}}/personas/po.md
- Task 2: Load current backlog from {{PROJECT_ROOT}}/project_docs/backlog.md
- Task 3: Analyze story dependencies and relationships
- Task 4: Assess technical debt and optimization opportunities
- Task 5: Generate epic recommendations and story breakdowns
```

### Initialization Task Prompts:
1. "Read and extract Product Owner principles, backlog management protocols, and grooming strategies"
2. "Load complete backlog, analyze all stories, epics, and their current status"
3. "Map all story dependencies, identify blockers, and create dependency graph"
4. "Analyze technical debt items, identify optimization opportunities, assess impact"
5. "Generate recommendations for new epics, story breakdowns, and prioritization"

### Post-Initialization:
After ALL tasks complete:
1. Voice announcement: bash {{AP_ROOT}}/voice/speakPo.sh "Backlog grooming initialized with 18 parallel analysis streams"
2. Launch parallel grooming sub-agents

## ðŸš€ PARALLEL GROOMING EXECUTION

### Phase 1: Domain Analysis (6 Parallel Sub-Agents)
```
*Launching domain analysis sub-agents:*
[Use native sub-agents - ALL in single function_calls block]
- Sub-Agent 1: Business Value Analysis - Assess ROI and business impact
- Sub-Agent 2: Domain Modeling - Analyze domain boundaries and contexts
- Sub-Agent 3: Feature Extraction - Identify feature opportunities
- Sub-Agent 4: Integration Analysis - Map integration points and dependencies
- Sub-Agent 5: Compliance Review - Check regulatory and security requirements
- Sub-Agent 6: Risk Assessment - Identify and quantify project risks
```

### Phase 2: Story Generation (6 Parallel Sub-Agents)
```
*Launching story generation sub-agents:*
[Use native sub-agents - ALL in single function_calls block]
- Sub-Agent 7: Feature Epic Generation - Create feature-focused epics
- Sub-Agent 8: Technical Epic Generation - Create technical/infrastructure epics
- Sub-Agent 9: Compliance Epic Generation - Create compliance/security epics
- Sub-Agent 10: Story Breakdown - Decompose epics into actionable stories
- Sub-Agent 11: Story Sizing - Estimate story points using Fibonacci
- Sub-Agent 12: Dependency Mapping - Create comprehensive dependency graph
```

### Phase 3: Optimization & Planning (6 Parallel Sub-Agents)
```
*Launching optimization sub-agents:*
[Use native sub-agents - ALL in single function_calls block]
- Sub-Agent 13: Sprint Allocation - Optimize story distribution across sprints
- Sub-Agent 14: Capacity Planning - Balance team capacity with story points
- Sub-Agent 15: Parallel Stream Planning - Identify parallel development opportunities
- Sub-Agent 16: Technical Debt Analysis - Prioritize debt paydown
- Sub-Agent 17: Business Value Optimization - Maximize ROI through prioritization
- Sub-Agent 18: Compliance Scheduling - Ensure regulatory deadlines are met
```

## ðŸ“Š GROOMING OUTPUT FORMAT

### Backlog Health Report
```markdown
## ðŸ“Š BACKLOG HEALTH METRICS
- **Total Stories**: {count}
- **Ready Stories**: {count} ({percentage}%)
- **Blocked Stories**: {count}
- **Technical Debt**: {count} stories, {points} points
- **Epic Coverage**: {percentage}%
- **Sprint Readiness**: {next_n_sprints} sprints ready

## ðŸŽ¯ RECOMMENDED ACTIONS
1. **Immediate**: {urgent_items}
2. **This Week**: {weekly_items}
3. **This Sprint**: {sprint_items}

## ðŸ“ˆ GENERATED ARTIFACTS
- **New Epics**: {count}
- **New Stories**: {count}
- **Updated Estimates**: {count}
- **Resolved Blockers**: {count}
```

## ðŸ”„ GROOMING WORKFLOW

### Step 1: Current State Analysis
- Load and analyze existing backlog
- Identify gaps, blockers, and opportunities
- Assess sprint readiness

### Step 2: Parallel Processing
- Execute all 18 sub-agents simultaneously
- Gather insights from each domain
- Synthesize recommendations

### Step 3: Backlog Updates
- Create new epics and stories
- Update estimates and dependencies
- Reorder based on value and dependencies
- Clear blockers where possible

### Step 4: Documentation
- Update backlog.md with all changes
- Generate grooming report
- Update velocity metrics
- Create sprint recommendations

## ðŸŽ¯ PERFORMANCE METRICS

- **Execution Time**: ~45 seconds (vs 15 minutes sequential)
- **Coverage**: 100% of backlog items analyzed
- **Parallel Streams**: 18 simultaneous analyses
- **Output**: 20-30 actionable improvements per session

## ðŸ“‹ BACKLOG UPDATE REQUIREMENTS

**MANDATORY**: After grooming, update backlog.md with:
```markdown
**[YYYY-MM-DD HH:MM] - PO Grooming**: Comprehensive parallel analysis complete
- Generated: {X} epics, {Y} stories
- Resolved: {Z} blockers
- Prioritized: {N} items
- Sprint Readiness: {percentage}%
```

## Available After Activation:
- Comprehensive backlog analysis report
- New epic and story recommendations
- Dependency graph visualization
- Sprint allocation plan
- Technical debt prioritization
- Risk mitigation strategies
- Compliance timeline
- ROI-based prioritization

This command leverages 18 native sub-agents for comprehensive parallel backlog analysis, delivering enterprise-grade grooming in under a minute.
