# TTS Configuration Template
# This file defines the complete TTS (Text-to-Speech) system configuration
# for the APM (Agentic Persona Mapping) framework.

# Global TTS Settings
tts:
  # Enable/disable TTS system-wide
  enabled: {{TTS_ENABLED}}
  
  # Primary TTS provider
  # Options: auto, piper, elevenlabs, system, discord, none
  provider: "{{TTS_PROVIDER}}"
  
  # Fallback provider when primary fails
  fallback_provider: "{{TTS_FALLBACK_PROVIDER}}"
  
  # Audio cache settings
  cache:
    enabled: true
    directory: "{{PROJECT_ROOT}}/.cache/tts"
    max_size_mb: 100
    cleanup_days: 7
  
  # Audio playback settings
  audio:
    # Audio format for cached files
    format: "wav"
    sample_rate: 22050
    channels: 1
    bit_depth: 16
    
    # Player preference order (platform-specific)
    players:
      wsl2: ["paplay", "aplay", "play", "ffplay"]
      linux: ["aplay", "paplay", "play", "ffplay"]
      macos: ["afplay", "play", "ffplay"]
      fallback: ["mpg123", "ffplay"]

# TTS Provider Configurations
providers:
  
  # Piper TTS (Offline, Local)
  piper:
    enabled: true
    install_path: "{{TTS_PIPER_INSTALL_PATH}}"
    binary: "{{TTS_PIPER_INSTALL_PATH}}/piper"
    models_directory: "{{TTS_PIPER_INSTALL_PATH}}/models"
    
    # Default voice mappings for Piper
    voices:
      orchestrator: "{{TTS_VOICE_ORCHESTRATOR_PIPER}}"
      developer: "{{TTS_VOICE_DEVELOPER_PIPER}}"
      architect: "{{TTS_VOICE_ARCHITECT_PIPER}}"
      analyst: "{{TTS_VOICE_ANALYST_PIPER}}"
      qa: "{{TTS_VOICE_QA_PIPER}}"
      pm: "{{TTS_VOICE_PM_PIPER}}"
      po: "{{TTS_VOICE_PO_PIPER}}"
      sm: "{{TTS_VOICE_SM_PIPER}}"
      design_architect: "{{TTS_VOICE_DESIGNARCHITECT_PIPER}}"
    
    # Piper-specific settings
    settings:
      quality: "medium"  # low, medium, high
      speed: 1.0
      pitch: 1.0
      volume: 1.0
      
    # Model download URLs (for automated setup)
    model_urls:
      base_url: "https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/"
      voices:
        ryan: "en/en_US/ryan/medium/en_US-ryan-medium.onnx"
        joe: "en/en_US/joe/medium/en_US-joe-medium.onnx"
        amy: "en/en_US/amy/medium/en_US-amy-medium.onnx"
        hfc_female: "en/en_US/hfc_female/medium/en_US-hfc_female-medium.onnx"
        kusal: "en/en_US/kusal/medium/en_US-kusal-medium.onnx"
  
  # ElevenLabs (Cloud TTS)
  elevenlabs:
    enabled: {{TTS_ELEVENLABS_ENABLED}}
    api_key: "{{TTS_ELEVENLABS_API_KEY}}"
    api_url: "https://api.elevenlabs.io/v1"
    
    # Voice mappings for ElevenLabs
    voices:
      orchestrator: "{{TTS_VOICE_ORCHESTRATOR_ELEVENLABS}}"
      developer: "{{TTS_VOICE_DEVELOPER_ELEVENLABS}}"
      architect: "{{TTS_VOICE_ARCHITECT_ELEVENLABS}}"
      analyst: "{{TTS_VOICE_ANALYST_ELEVENLABS}}"
      qa: "{{TTS_VOICE_QA_ELEVENLABS}}"
      pm: "{{TTS_VOICE_PM_ELEVENLABS}}"
      po: "{{TTS_VOICE_PO_ELEVENLABS}}"
      sm: "{{TTS_VOICE_SM_ELEVENLABS}}"
      design_architect: "{{TTS_VOICE_DESIGNARCHITECT_ELEVENLABS}}"
    
    # ElevenLabs-specific settings
    settings:
      model: "eleven_monolingual_v1"
      stability: 0.75
      similarity_boost: 0.75
      style: 0.0
      use_speaker_boost: true
      
    # Rate limiting
    rate_limit:
      requests_per_minute: 120
      characters_per_month: 10000
      
    # Caching strategy
    cache:
      enabled: true
      ttl_hours: 24
  
  # System TTS (OS Default)
  system:
    enabled: true
    
    # System-specific commands
    commands:
      linux: "espeak-ng"
      macos: "say"
      windows: "powershell -Command \"Add-Type -AssemblyName System.Speech; (New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('{{TEXT}}')\""
    
    # Voice mappings for system TTS
    voices:
      orchestrator: "{{TTS_VOICE_ORCHESTRATOR_SYSTEM}}"
      developer: "{{TTS_VOICE_DEVELOPER_SYSTEM}}"
      architect: "{{TTS_VOICE_ARCHITECT_SYSTEM}}"
      analyst: "{{TTS_VOICE_ANALYST_SYSTEM}}"
      qa: "{{TTS_VOICE_QA_SYSTEM}}"
      pm: "{{TTS_VOICE_PM_SYSTEM}}"
      po: "{{TTS_VOICE_PO_SYSTEM}}"
      sm: "{{TTS_VOICE_SM_SYSTEM}}"
      design_architect: "{{TTS_VOICE_DESIGNARCHITECT_SYSTEM}}"
    
    # System-specific settings
    settings:
      speed: 175  # words per minute
      pitch: 50   # 0-100
      volume: 75  # 0-100
  
  # Discord Webhook TTS
  discord:
    enabled: {{TTS_DISCORD_ENABLED}}
    webhook_url: "{{TTS_DISCORD_WEBHOOK_URL}}"
    
    # Discord-specific settings
    settings:
      username_prefix: "APM-"
      use_tts: true
      message_format: "ü§ñ **{{PERSONA}}**: {{MESSAGE}}"
      
    # Voice/persona mappings (using emojis for Discord)
    voices:
      orchestrator: "üéØ"
      developer: "üë®‚Äçüíª"
      architect: "üèóÔ∏è"
      analyst: "üìä"
      qa: "üß™"
      pm: "üìã"
      po: "üìù"
      sm: "üèÉ‚Äç‚ôÇÔ∏è"
      design_architect: "üé®"
  
  # None/Silent Provider
  none:
    enabled: true
    description: "Silent mode - no audio output"

# Persona-Specific Configurations
personas:
  
  orchestrator:
    description: "AP Orchestrator - Central coordination persona"
    voice_characteristics:
      tone: "authoritative"
      pace: "measured"
      style: "professional"
    default_messages:
      activation: "AP Orchestrator activated. Loading system configuration and available personas."
      delegation: "Delegating task to {{TARGET_PERSONA}} persona. Monitoring progress."
      completion: "Task coordination complete. All personas have reported successful completion."
  
  developer:
    description: "Developer Agent - Implementation and coding persona"
    voice_characteristics:
      tone: "focused"
      pace: "steady"
      style: "technical"
    default_messages:
      activation: "Developer persona activated. Analyzing project requirements and technical specifications."
      start_work: "Beginning implementation of Story {{STORY_ID}}. Estimated completion in {{ESTIMATE}} minutes."
      completion: "Implementation complete. Running test suite and preparing code review."
  
  architect:
    description: "System Architect - Design and architecture persona"
    voice_characteristics:
      tone: "thoughtful"
      pace: "deliberate"
      style: "strategic"
    default_messages:
      activation: "System Architect activated. Loading architectural patterns and design principles."
      analysis: "Analyzing system architecture for {{COMPONENT}}. Evaluating scalability and maintainability."
      completion: "Architectural design complete. Documentation updated with recommended patterns."
  
  analyst:
    description: "System Analyst - Analysis and research persona"
    voice_characteristics:
      tone: "analytical"
      pace: "methodical"
      style: "detailed"
    default_messages:
      activation: "System Analyst activated. Initializing data analysis and research capabilities."
      investigation: "Investigating {{TOPIC}}. Gathering data from multiple sources."
      completion: "Analysis complete. Comprehensive report generated with recommendations."
  
  qa:
    description: "QA Agent - Quality assurance and testing persona"
    voice_characteristics:
      tone: "meticulous"
      pace: "thorough"
      style: "quality-focused"
    default_messages:
      activation: "QA Framework activated. Loading test suites and analytics engine."
      testing: "Executing {{TEST_TYPE}} test suite. {{COMPLETED}} of {{TOTAL}} test cases completed."
      completion: "Test execution complete. {{PASSED}} tests passed, {{FAILED}} tests failed. Generating quality insights."
  
  pm:
    description: "Project Manager - Project coordination persona"
    voice_characteristics:
      tone: "organized"
      pace: "efficient"
      style: "coordinating"
    default_messages:
      activation: "Project Manager activated. Loading project timeline and resource allocation."
      planning: "Planning sprint {{SPRINT_NUMBER}}. Allocating {{STORY_COUNT}} stories across team capacity."
      completion: "Sprint planning complete. All stories assigned with clear acceptance criteria."
  
  po:
    description: "Product Owner - Product strategy persona"
    voice_characteristics:
      tone: "visionary"
      pace: "purposeful"
      style: "business-focused"
    default_messages:
      activation: "Product Owner activated. Loading product roadmap and stakeholder requirements."
      grooming: "Grooming backlog for Sprint {{SPRINT_NUMBER}}. Prioritizing {{STORY_COUNT}} stories."
      completion: "Backlog grooming complete. Sprint goals defined with clear business value."
  
  sm:
    description: "Scrum Master - Agile process persona"
    voice_characteristics:
      tone: "facilitating"
      pace: "energetic"
      style: "team-focused"
    default_messages:
      activation: "Scrum Master activated. Initializing agile process management and team coordination."
      coordination: "Coordinating parallel development across {{DEVELOPER_COUNT}} developer streams."
      completion: "Sprint coordination complete. All development streams integrated successfully."
  
  design_architect:
    description: "Design Architect - UI/UX design persona"
    voice_characteristics:
      tone: "creative"
      pace: "inspired"
      style: "user-focused"
    default_messages:
      activation: "Design Architect activated. Loading design systems and user experience patterns."
      designing: "Creating design specification for {{COMPONENT}}. Focusing on user journey optimization."
      completion: "Design specification complete. Mockups and interaction patterns documented."

# Environment Variable Mappings
# These map YAML configuration to environment variables for runtime use
environment_mappings:
  tts.enabled: "TTS_ENABLED"
  tts.provider: "TTS_PROVIDER"
  tts.fallback_provider: "TTS_FALLBACK_PROVIDER"
  
  providers.piper.install_path: "TTS_PIPER_INSTALL_PATH"
  providers.piper.voices.orchestrator: "TTS_VOICE_ORCHESTRATOR_PIPER"
  providers.piper.voices.developer: "TTS_VOICE_DEVELOPER_PIPER"
  providers.piper.voices.architect: "TTS_VOICE_ARCHITECT_PIPER"
  providers.piper.voices.analyst: "TTS_VOICE_ANALYST_PIPER"
  providers.piper.voices.qa: "TTS_VOICE_QA_PIPER"
  providers.piper.voices.pm: "TTS_VOICE_PM_PIPER"
  providers.piper.voices.po: "TTS_VOICE_PO_PIPER"
  providers.piper.voices.sm: "TTS_VOICE_SM_PIPER"
  providers.piper.voices.design_architect: "TTS_VOICE_DESIGNARCHITECT_PIPER"
  
  providers.elevenlabs.api_key: "TTS_ELEVENLABS_API_KEY"
  providers.elevenlabs.voices.orchestrator: "TTS_VOICE_ORCHESTRATOR_ELEVENLABS"
  providers.elevenlabs.voices.developer: "TTS_VOICE_DEVELOPER_ELEVENLABS"
  providers.elevenlabs.voices.architect: "TTS_VOICE_ARCHITECT_ELEVENLABS"
  providers.elevenlabs.voices.analyst: "TTS_VOICE_ANALYST_ELEVENLABS"
  providers.elevenlabs.voices.qa: "TTS_VOICE_QA_ELEVENLABS"
  providers.elevenlabs.voices.pm: "TTS_VOICE_PM_ELEVENLABS"
  providers.elevenlabs.voices.po: "TTS_VOICE_PO_ELEVENLABS"
  providers.elevenlabs.voices.sm: "TTS_VOICE_SM_ELEVENLABS"
  providers.elevenlabs.voices.design_architect: "TTS_VOICE_DESIGNARCHITECT_ELEVENLABS"
  
  providers.discord.webhook_url: "TTS_DISCORD_WEBHOOK_URL"

# Installation Scripts
installation:
  scripts:
    piper_setup: "{{APM_ROOT}}/agents/scripts/tts-setup/setup-piper-chat.sh"
    tts_configure: "{{APM_ROOT}}/agents/scripts/configure-tts.sh"
    tts_manager: "{{APM_ROOT}}/agents/scripts/tts-manager.sh"
  
  dependencies:
    required:
      - "bash"
      - "curl"
      - "jq"
    optional:
      - "paplay"   # PulseAudio
      - "aplay"    # ALSA
      - "play"     # SoX
      - "afplay"   # macOS
      - "ffplay"   # FFmpeg

# Validation and Testing
validation:
  tests:
    - name: "Provider Availability"
      command: "{{APM_ROOT}}/agents/scripts/tts-manager.sh list"
      expected: "Lists available providers"
    
    - name: "TTS Test"
      command: "{{APM_ROOT}}/agents/scripts/tts-manager.sh test {{TTS_PROVIDER}}"
      expected: "Successfully generates and plays test audio"
    
    - name: "Persona Voice Test"
      command: "{{VOICE_SCRIPT_PATH}}/speakOrchestrator.sh 'Test message'"
      expected: "Voice script executes without errors"
    
    - name: "Audio System Diagnosis"
      command: "{{APM_ROOT}}/agents/scripts/tts-manager.sh diagnose"
      expected: "Displays comprehensive audio system information"

# Troubleshooting Guide
troubleshooting:
  common_issues:
    - issue: "No audio output on WSL2"
      solution: "Check PULSE_SERVER environment variable and WSLg audio forwarding"
      commands:
        - "echo $PULSE_SERVER"
        - "pulseaudio --start --log-target=syslog"
        - "speaker-test -t wav -c 2"
    
    - issue: "Piper models not found"
      solution: "Download voice models to correct directory"
      commands:
        - "ls {{TTS_PIPER_INSTALL_PATH}}/models/"
        - "{{APM_ROOT}}/agents/scripts/tts-manager.sh configure piper"
    
    - issue: "ElevenLabs API errors"
      solution: "Verify API key and rate limits"
      commands:
        - "echo $TTS_ELEVENLABS_API_KEY"
        - "curl -H 'xi-api-key: $TTS_ELEVENLABS_API_KEY' https://api.elevenlabs.io/v1/voices"
    
    - issue: "Provider fallback not working"
      solution: "Check fallback provider configuration and availability"
      commands:
        - "{{APM_ROOT}}/agents/scripts/tts-manager.sh test {{TTS_FALLBACK_PROVIDER}}"

# Performance Tuning
performance:
  optimization:
    - setting: "Cache Management"
      description: "Regularly clear TTS cache to manage disk usage"
      command: "{{APM_ROOT}}/agents/scripts/tts-manager.sh clear-cache"
    
    - setting: "Provider Selection"
      description: "Use local providers (piper) for faster response times"
      recommendation: "Set TTS_PROVIDER=piper for development environments"
    
    - setting: "Voice Model Quality"
      description: "Balance quality vs speed with model selection"
      options: ["low", "medium", "high"]
      recommendation: "Use medium quality for optimal balance"

# Security Configuration
security:
  api_keys:
    storage: "Store in environment variables or secure secret management"
    rotation: "Rotate API keys regularly"
    access: "Limit API key access to necessary services only"
  
  privacy:
    piper: "Fully offline - no data transmission"
    elevenlabs: "Text data sent to cloud service"
    discord: "Messages sent to configured webhook"
  
  recommendations:
    - "Use offline providers (piper) for sensitive environments"
    - "Implement API key rotation for cloud providers"
    - "Monitor API usage and costs for cloud services"
    - "Use environment variables instead of hardcoded secrets"