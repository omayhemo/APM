---
name: requirements
description: Sequential requirements analysis with guided methodology
metadata:
  version: 1.0.0
  agent: Analyst
  performance: sequential
  approach: guided
---

## ðŸŽ­ PERSONA CONTEXT ACTIVATION

**This command requires the Analyst persona.**

```markdown
*Loading Analyst context for optimal command execution...*

Quick Context Load (1-2 seconds):
- Loading Analyst configuration and expertise
- Loading relevant templates and frameworks  
- Voice notification: bash ${{SPEAK_ANALYST}} "Analyst context loaded for command execution"
- Workspace validation: Ensuring execution from {{PROJECT_ROOT}}

*Analyst context ready. Proceeding with command...*
```


# Sequential Requirements Analysis Command

**Analyst Agent Only**: Executes structured requirements gathering through guided sequential methodology for comprehensive analysis and documentation.

## Metadata
- **Name**: requirements
- **Description**: Sequential requirements analysis with guided methodology
- **Agent**: Analyst
- **Performance**: Sequential (focused analysis vs parallel streams)
- **Approach**: Interactive guidance and systematic analysis

## Overview

The `/requirements` command enables the Analyst to gather and analyze requirements through:
- Sequential exploration with focused attention on each requirement type
- Interactive stakeholder engagement and clarification
- Systematic analysis methodology for completeness
- Thorough validation and prioritization process
- Clear documentation and traceability

## Usage

```
/requirements
```

## Prerequisites

Before running this command, ensure:
- [ ] Project context and objectives are understood
- [ ] Key stakeholders are identified and accessible
- [ ] Business goals and constraints are known
- [ ] Existing requirements documentation reviewed
- [ ] Analysis scope and boundaries defined

## ðŸš€ INITIALIZATION PROTOCOL (MANDATORY)

**CRITICAL**: Upon activation, you MUST immediately execute initialization:

```
I'm launching sequential requirements analysis for comprehensive requirement gathering and documentation.

*Loading requirements frameworks and analysis methodologies...*
[Execute initialization tasks in sequence]
- Load requirements analysis templates and frameworks
- Review project context and stakeholder information
- Prepare requirements gathering techniques
- Set up validation and documentation processes
```

## Sequential Requirements Analysis Process

### Phase 1: Context & Stakeholder Analysis (10-15 minutes)
**Objective**: Understand the problem space and stakeholder needs
- **Project Context Review**
  - Business objectives and goals
  - Project scope and boundaries
  - Constraints and assumptions
  - Success criteria definition

- **Stakeholder Analysis**
  - Identify all stakeholder types
  - Understand stakeholder priorities
  - Map stakeholder influences and interests
  - Plan engagement strategies

### Phase 2: Requirements Discovery (20-30 minutes)
**Objective**: Systematically gather all types of requirements
- **Functional Requirements**
  - Core system capabilities
  - User interactions and workflows
  - Business process requirements
  - Data processing needs

- **Non-Functional Requirements**
  - Performance and scalability
  - Security and compliance
  - Usability and accessibility
  - Reliability and availability

- **Business Requirements**
  - Business rules and policies
  - Integration requirements
  - Reporting and analytics needs
  - Regulatory compliance

### Phase 3: Analysis & Validation (15-20 minutes)
**Objective**: Analyze, prioritize, and validate requirements
- **Requirements Analysis**
  - Feasibility assessment
  - Impact analysis
  - Dependency mapping
  - Risk identification

- **Validation & Prioritization**
  - Stakeholder validation
  - Business value assessment
  - MoSCoW prioritization
  - Conflict resolution

### Phase 4: Documentation & Traceability (10-15 minutes)
**Objective**: Document requirements with full traceability
- **Documentation Creation**
  - Clear requirement statements
  - Acceptance criteria definition
  - Traceability matrix
  - Dependencies documentation

- **Quality Assurance**
  - Completeness review
  - Consistency checking
  - Clarity verification
  - Stakeholder sign-off preparation

## Requirements Gathering Techniques

### Discovery Methods
- **Stakeholder Interviews**: One-on-one requirement gathering
- **Workshops**: Collaborative requirement sessions
- **Document Analysis**: Review of existing documentation
- **Observation**: Process and user behavior analysis
- **Prototyping**: Requirements validation through mockups

### Analysis Frameworks
- **MoSCoW Prioritization**: Must/Should/Could/Won't classification
- **Kano Model**: User satisfaction vs feature presence analysis
- **Impact/Effort Matrix**: Resource allocation decision support
- **FURPS+**: Functionality, Usability, Reliability, Performance, Supportability
- **SMART Criteria**: Specific, Measurable, Achievable, Relevant, Time-bound

### Validation Techniques
- **Requirements Review**: Systematic examination with stakeholders
- **Walkthrough**: Step-by-step requirement verification
- **Prototyping**: Early validation through working models
- **Scenario Testing**: Real-world usage validation
- **Traceability Analysis**: Requirement coverage verification

## Interactive Guidance Style

This command emphasizes **collaborative analysis**:
- **Socratic questioning** to uncover hidden requirements
- **Systematic methodology** ensuring comprehensive coverage
- **Stakeholder engagement** throughout the process
- **Iterative refinement** based on feedback
- **Quality focus** on clear, testable requirements

## Expected Outcomes

After requirements analysis:
- **Comprehensive requirements document** with all requirement types
- **Prioritized requirement list** with business value assessment
- **Traceability matrix** linking requirements to business objectives
- **Validation summary** with stakeholder confirmation
- **Implementation readiness** with clear acceptance criteria

## Output Format

```markdown
# Requirements Analysis Results

## Project Context
- **Project Name**: [Name]
- **Analysis Date**: [Date]
- **Analyst**: [Name]
- **Stakeholders**: [List]

## Executive Summary
### Business Objectives
- [Primary business goal]
- [Secondary business goal]
- [Success criteria]

### Scope
- **In Scope**: [What's included]
- **Out of Scope**: [What's excluded]
- **Assumptions**: [Key assumptions made]

## Stakeholder Analysis
| Stakeholder | Role | Influence | Interest | Priority Requirements |
|-------------|------|-----------|----------|---------------------|
| [Name] | [Role] | [High/Med/Low] | [Primary interest] | [Key needs] |

## Functional Requirements
### Core Functionality
#### REQ-F-001: [Requirement Title]
- **Description**: [Clear requirement statement]
- **Priority**: [Must/Should/Could/Won't]
- **Source**: [Stakeholder/Document]
- **Acceptance Criteria**:
  - Given [context], when [action], then [outcome]
  - [Additional criteria]

### User Interface Requirements
#### REQ-F-010: [UI Requirement]
- **Description**: [UI requirement details]
- **Priority**: [MoSCoW]
- **Mockups**: [Reference to designs]

## Non-Functional Requirements
### Performance Requirements
#### REQ-NF-001: [Performance Requirement]
- **Description**: [Performance standard]
- **Measurement**: [How measured]
- **Target**: [Specific metric]

### Security Requirements
#### REQ-NF-010: [Security Requirement]
- **Description**: [Security need]
- **Compliance**: [Standards/regulations]

## Business Requirements
### Business Rules
#### REQ-BR-001: [Business Rule]
- **Description**: [Rule definition]
- **Impact**: [Business impact]
- **Implementation**: [How enforced]

### Integration Requirements
#### REQ-INT-001: [Integration Need]
- **System**: [External system]
- **Interface**: [Integration method]
- **Data Flow**: [Information exchange]

## Requirements Analysis
### Priority Matrix
| Priority | Count | Business Value | Implementation Effort |
|----------|-------|----------------|---------------------|
| Must Have | [#] | [High/Med/Low] | [High/Med/Low] |
| Should Have | [#] | [High/Med/Low] | [High/Med/Low] |
| Could Have | [#] | [High/Med/Low] | [High/Med/Low] |

### Dependencies
- **REQ-XXX depends on REQ-YYY**: [Dependency description]
- **External Dependencies**: [Third-party requirements]

### Risks
- **Risk**: [Description] â†’ **Mitigation**: [Strategy]
- **Assumption Risk**: [If assumption false] â†’ **Mitigation**: [Plan]

## Validation Summary
- **Stakeholder Review**: [Completed/Pending]
- **Business Validation**: [Approved/Needs revision]
- **Technical Feasibility**: [Confirmed/Needs analysis]
- **Conflicts Identified**: [Number and status]

## Traceability Matrix
| Requirement ID | Business Objective | Stakeholder | Test Case | Status |
|----------------|-------------------|-------------|-----------|--------|
| REQ-F-001 | [Objective] | [Source] | TC-001 | [Draft/Final] |

## Next Steps
1. [Immediate action needed]
2. [Stakeholder approvals required]
3. [Technical feasibility analysis]
4. [Requirements baseline establishment]

## Appendices
### Glossary
- **Term 1**: [Definition]
- **Term 2**: [Definition]

### References
- [Document 1]: [Purpose]
- [Interview with Stakeholder]: [Date and key points]
```

## Integration Points

- **Epic Development**: Use `/epic` to create epics from requirements
- **Stakeholder Engagement**: Use `/stakeholder-review` for validation
- **Technical Analysis**: Use `/architecture` for solution design
- **Project Planning**: Use `/prd` for comprehensive product requirements

## Voice Notifications

```bash
bash {{AP_ROOT}}/voice/speakAnalyst.sh "Sequential requirements analysis beginning. Launching systematic requirement gathering and analysis process..."
```

## Success Metrics

- **Completeness**: All requirement types systematically covered
- **Quality**: Clear, testable, and traceable requirements
- **Stakeholder Satisfaction**: Requirements accurately reflect needs
- **Implementation Readiness**: Requirements ready for development planning
- **Validation Success**: All requirements validated by stakeholders

## When to Use Sequential vs Parallel

**Use `/requirements` when:**
- Deep stakeholder engagement needed
- Complex requirement interdependencies
- Thorough analysis and validation critical
- Interactive requirement refinement desired
- Quality over speed prioritized

**Use `/parallel-requirements` when:**
- Multiple requirement domains simultaneously
- Time constraints exist
- Comprehensive coverage needed quickly
- Well-defined analysis framework
- Speed and efficiency prioritized

---

This command provides thorough, methodical requirements analysis with emphasis on stakeholder collaboration, systematic coverage, and quality documentation.
